---
title: "Tidyverse"
author: "Corinna Boenke"
---
# Challenge 1

## Load librarys
```{r}
library(tidyverse)
library(readxl)
```
## Import data
```{r}
bikeshops_tbl <- read_excel("D:\\Corinna\\TUHH\\SoSe2023\\BusinessDataBasics\\ss23-bdsb-CorinnaB123\\Data\\bikeshops.xlsx")
orderlines_tbl <- read_excel("D:\\Corinna\\TUHH\\SoSe2023\\BusinessDataBasics\\ss23-bdsb-CorinnaB123\\Data\\orderlines.xlsx")
bikes_tbl  <- read_excel("D:\\Corinna\\TUHH\\SoSe2023\\BusinessDataBasics\\ss23-bdsb-CorinnaB123\\Data\\bikes.xlsx")
```
## Joining data
```{r}
bike_orderlines_joined_tbl <- orderlines_tbl %>%
    left_join(bikes_tbl, by = c("product.id" = "bike.id")) %>%
    left_join(bikeshops_tbl, by = c("customer.id" = "bikeshop.id"))

```
## Wrangling data
```{r}
conflicts_prefer(magrittr::set_names)
bike_orderlines_wrangled_tbl <- bike_orderlines_joined_tbl %>%
  #separate
  separate(col    = location,
          into   = c("city", "state"),
          sep    = ", ") %>%
  #Add the total price
   mutate(total.price = price * quantity) %>%
  #Rename
  rename(bikeshop = name) %>%
          set_names(names(.) %>% str_replace_all("\\.", "_"))

```
## Business Insights

```{r}
 library(lubridate)
#Manipulate
 sales_by_state_tbl <- bike_orderlines_wrangled_tbl %>%
    # Select columns
   select(state, total_price) %>%
   # Grouping by state and summarizing sales
   group_by(state) %>% 
        summarize(sales = sum(total_price)) %>%
   #Add a column that turns the numbers into a currency format
   mutate(sales_text = scales::dollar(sales, big.mark = ".", 
                                     decimal.mark = ",", 
                                     prefix = "", 
                                     suffix = " €"))

    sales_by_state_tbl
   
```


```{r plot, fig.width=10, fig.height=7}
 # Visualize the data
        sales_by_state_tbl %>%
          
          # Setup canvas with the columns year (x-axis) and sales (y-axis)
          ggplot(aes(x = state, y = sales)) +
          
          
          # Geometries
          geom_col(fill = "#2DC6D6") + 
          geom_label(aes(label = sales_text)) +
          
          # Hint
          theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
          theme(axis.text.y = element_text(angle = 45, hjust = 1)) +
          
          # Formatting
          scale_y_continuous(labels = scales::dollar_format(big.mark = ".", 
                                                            decimal.mark = ",", 
                                                            prefix = "", 
                                                            suffix = " €")) +
          labs(
            title    = "Revenue by state",
            x = "States",
            y = "Revenue"
          )
```

```{r}
 # Sales by State and Year ----
conflicts_prefer(lubridate::year)

      # Manipulate

          sales_by_state_year_tbl <- bike_orderlines_wrangled_tbl %>%
  
      # Select columns and add the a year
          select(order_date, total_price, state) %>%
          mutate(year = year(order_date)) %>%
  
      # Group by and summarize year and state
          group_by(year, state) %>%
          summarise(sales = sum(total_price)) %>%
          ungroup() %>%
  
      # Format
          mutate(sales_text = scales::dollar(sales, big.mark = ".", 
                                     decimal.mark = ",", 
                                     prefix = "", 
                                     suffix = " €"))
sales_by_state_year_tbl
```


```{r plot_1, fig.width=11, fig.height=7}
 # Visualize the data
          sales_by_state_year_tbl %>%
  
        # Set up x, y, fill
          ggplot(aes(x = year, y = sales, fill = state)) +
  
        # Geometries
          geom_col() + 
  
        # Facet
          facet_wrap(~ state) +
  
        # Formatting
          scale_y_continuous(labels = scales::dollar_format(big.mark = ".", 
                                                    decimal.mark = ",", 
                                                    prefix = "", 
                                                    suffix = " €")) +
          labs(
                title = "Revenue by state and year",
                fill = "States"
              )
```
